0	Calculate age in C#	// Save today's date.\nvar today = DateTime.Today;\n// Calculate the age.\nvar age = today.Year - birthdate.Year;\n// Go back to the year the person was born in case of a leap year\nif (birthdate &gt; today.AddYears(-age)) age--;
1	Calculate relative time in C#	const int SECOND = 1;\nconst int MINUTE = 60 * SECOND;\nconst int HOUR = 60 * MINUTE;\nconst int DAY = 24 * HOUR;\nconst int MONTH = 30 * DAY;\n\nvar ts = new TimeSpan(DateTime.UtcNow.Ticks - yourDate.Ticks);\ndouble delta = Math.Abs(ts.TotalSeconds);\n\nif (delta &lt; 1 * MINUTE)\n  return ts.Seconds == 1 ? "one second ago" : ts.Seconds + " seconds ago";\n\nif (delta &lt; 2 * MINUTE)\n  return "a minute ago";\n\nif (delta &lt; 45 * MINUTE)\n  return ts.Minutes + " minutes ago";\n\nif (delta &lt; 90 * MINUTE)\n  return "an hour ago";\n\nif (delta &lt; 24 * HOUR)\n  return ts.Hours + " hours ago";\n\nif (delta &lt; 48 * HOUR)\n  return "yesterday";\n\nif (delta &lt; 30 * DAY)\n  return ts.Days + " days ago";\n\nif (delta &lt; 12 * MONTH)\n{\n  int months = Convert.ToInt32(Math.Floor((double)ts.Days / 30));\n  return months &lt;= 1 ? "one month ago" : months + " months ago";\n}\nelse\n{\n  int years = Convert.ToInt32(Math.Floor((double)ts.Days / 365));\n  return years &lt;= 1 ? "one year ago" : years + " years ago";\n}
2	Reliable timer in a console application	Console.ReadLine()
3	Decoding T-SQL CAST in C#/VB.NET	Convert.ToString(Convert.ToChar(Int32.Parse(EncodedString.Substring(intParseIndex, 2), System.Globalization.NumberStyles.HexNumber)));
4	What is the difference between an int and an Integer in Java and C#?	System.Int32
6	Automatically update version number	Version v = Assembly.GetExecutingAssembly().GetName().Version;\nstring About = string.Format(CultureInfo.InvariantCulture, @"YourApp Version {0}.{1}.{2} (r{3})", v.Major, v.Minor, v.Build, v.Revision);
8	How do I connect to a database and loop over a recordset in C#?	using System.Data.OleDb;\n...\n\nusing (OleDbConnection conn = new OleDbConnection())\n{\n    conn.ConnectionString = "Provider=sqloledb;Data Source=yourServername\\yourInstance;Initial Catalog=databaseName;Integrated Security=SSPI;";\n\n    using (OleDbCommand cmd = new OleDbCommand())\n    {\n        conn.Open();\n        cmd.Connection = conn;\n        cmd.CommandText = "Select * from yourTable";\n\n        using (OleDbDataReader dr = cmd.ExecuteReader())\n        {\n            while (dr.Read())\n            {\n                Console.WriteLine(dr["columnName"]);\n            }\n        }\n    }\n}
9	How do I delete a file which is locked by another process in C#?	MoveFileEx
10	How to check for file lock?	if not locked then\n    open and update file
11	Hiding inherited members	[Obsolete("These are not supported in this class.", true)]\npublic override  void dontcallmeanymore()\n{\n}
13	Wiggling the mouse	using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\nstatic class Program\n{\n    static void Main()\n    {\n        Timer timer = new Timer();\n        // timer.Interval = 4 minutes\n        timer.Interval = (int)(TimeSpan.TicksPerMinute * 4 / TimeSpan.TicksPerMillisecond);\n        timer.Tick += (sender, args) =&gt; { Cursor.Position = new Point(Cursor.Position.X + 1, Cursor.Position.Y + 1); };\n        timer.Start();\n        Application.Run();\n    }\n}
14	Find node clicked under context menu	void treeView1MouseUp(object sender, MouseEventArgs e)\n{\n    if(e.Button == MouseButtons.Right)\n    {\n        // Select the clicked node\n        treeView1.SelectedNode = treeView1.GetNodeAt(e.X, e.Y);\n\n        if(treeView1.SelectedNode != null)\n        {\n            myContextMenuStrip.Show(treeView1, e.Location);\n        }\n    }\n}
15	Converting ARBG to RGB with alpha blending	alpha=argb.alpha()\nr = (alpha/255)*argb.r() + (1 - alpha/255)*blend.r()\ng = (alpha/255)*argb.g() + (1 - alpha/255)*blend.g()\nb = (alpha/255)*argb.b() + (1 - alpha/255)*blend.b()
20	Accessing a Dictionary.Keys Key through a numeric index	int LastCount = mydict.Keys.ElementAt(mydict.Count -1);
21	CSV string handling	string [] strings = contactList.Select(c =&gt; c.Name).ToArray();\nstring csv = string.Join(",", strings);
22	CSharpCodeProvider Compilation Performance	using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing Microsoft.CSharp;\nusing System.CodeDom;\nusing System.IO;\nusing System.CodeDom.Compiler;\nusing System.Reflection;\n\nnamespace CodeDomQuestion\n{\n    class Program\n    {\n\n        private static void Main(string[] args)\n        {\n            Program p = new Program();\n            p.dotest("C:\\fs.exe");\n        }\n\n        public void dotest(string outputname)\n        {\n            CSharpCodeProvider cscProvider = new CSharpCodeProvider();\n            CompilerParameters cp = new CompilerParameters();\n            cp.MainClass = null;\n            cp.GenerateExecutable = true;\n            cp.OutputAssembly = outputname;\n\n            CodeNamespace ns = new CodeNamespace("StackOverflowd");\n\n            CodeTypeDeclaration type = new CodeTypeDeclaration();\n            type.IsClass = true;\n            type.Name = "MainClass";\n            type.TypeAttributes = TypeAttributes.Public;\n\n            ns.Types.Add(type);\n\n            CodeMemberMethod cmm = new CodeMemberMethod();\n            cmm.Attributes = MemberAttributes.Static;\n            cmm.Name = "Main";\n            cmm.Statements.Add(new CodeSnippetExpression("System.Console.WriteLine('f'zxcvv)"));\n            type.Members.Add(cmm);\n\n            CodeCompileUnit ccu = new CodeCompileUnit();\n            ccu.Namespaces.Add(ns);\n\n            CompilerResults results = cscProvider.CompileAssemblyFromDom(cp, ccu);\n\n            foreach (CompilerError err in results.Errors)\n                Console.WriteLine(err.ErrorText + " - " + err.FileName + ":" + err.Line);\n\n            Console.WriteLine();\n        }\n    }\n}
23	How can I evaluate C# code dynamically?	String propName = "Text";\nPropertyInfo pi = someObject.GetType().GetProperty(propName);\npi.SetValue(someObject, "New Value", new Object[0]);
25	C# and Arrow Keys	protected override bool ProcessCmdKey(ref Message msg, Keys keyData)\n{\n    bool shiftPressed = (keyData &amp; Keys.Shift) != 0;\n    Keys unmodifiedKey = (keyData &amp; Keys.KeyCode);\n\n    // rest of code goes here\n}
27	Why is Array.Length an int, and not an uint	UInt
28	In C#, why can't a List<string> object be stored in a List<object> variable	List&lt;object&gt; ol = new List&lt;object&gt;();\nList&lt;string&gt; sl;\nsl = (List&lt;string&gt;)ol;
29	sgen.exe fails during build	&lt;Target Name="GenerateSerializationAssembliesForAllTypes"\n  DependsOnTargets="AssignTargetPaths;Compile;ResolveKeySource"\n  Inputs="$(MSBuildAllProjects);@(IntermediateAssembly)"\n  Outputs="$(OutputPath)$(_SGenDllName)"&gt;\n    &lt;SGen BuildAssemblyName="$(TargetFileName)"\n      BuildAssemblyPath="$(OutputPath)" References="@(ReferencePath)"\n      ShouldGenerateSerializer="true" UseProxyTypes="true"\n      KeyContainer="$(KeyContainerName)" KeyFile="$(KeyOriginatorFile)"\n      DelaySign="$(DelaySign)" ToolPath="$(SGenToolPath)"&gt;\n        &lt;Output TaskParameter="SerializationAssembly"\n          ItemName="SerializationAssembly" /&gt;\n     &lt;/SGen&gt;\n&lt;/Target&gt;\n&lt;!-- &lt;Target Name="BeforeBuild"&gt;\n&lt;/Target&gt; --&gt;\n&lt;Target Name="AfterBuild"\n  DependsOnTargets="GenerateSerializationAssembliesForAllTypes"&gt;\n&lt;/Target&gt;
30	How to wait for thread complete before continuing?	// Start all of the threads.\nList&lt;Thread&gt; startedThreads = new List&lt;Thread&gt;();\nforeach (...) {\n  Thread thread = new Thread(new ThreadStart(MyMethod));\n  thread.Start();\n  startedThreads.Add(thread);\n}\n\n// Wait for all of the threads to finish.\nforeach (Thread thread in startedThreads) {\n  thread.Join();\n}
31	Getting DirectoryNotFoundException when trying to Connect to Device with CoreCon API	&lt;systemdrive&gt;:\Program files\Common Files\Microsoft Shared\CoreCon\1.0\Bin
32	Is the C# static constructor thread safe?	public class Singleton\n{\n    private static Singleton instance;\n    // Added a static mutex for synchronising use of instance.\n    private static System.Threading.Mutex mutex;\n    private Singleton() { }\n    static Singleton()\n    {\n        instance = new Singleton();\n        mutex = new System.Threading.Mutex();\n    }\n\n    public static Singleton Acquire()\n    {\n        mutex.WaitOne();\n        return instance;\n    }\n\n    // Each call to Acquire() requires a call to Release()\n    public static void Release()\n    {\n        mutex.ReleaseMutex();\n    }\n}
33	Linq to objects - select first object	var app = Process.GetProcesses().FirstOrDefault(p =&gt; p.ProcessName.Contains("MyAppName") &amp;&amp; p.MainWindowHandle != IntPtr.Zero);\n\nif (app == null)\n    return;\n\nSetForegroundWindow(app.MainWindowHandle);
34	Center text output from Graphics.DrawString()	private void DrawLetter()\n    {\n        Graphics g = this.CreateGraphics();\n\n        float width = ((float)this.ClientRectangle.Width);\n        float height = ((float)this.ClientRectangle.Width);\n\n        float emSize = height;\n\n        Font font = new Font(FontFamily.GenericSansSerif, emSize, FontStyle.Regular);\n\n        font = FindBestFitFont(g, letter.ToString(), font, this.ClientRectangle.Size);\n\n        SizeF size = g.MeasureString(letter.ToString(), font);\n        g.DrawString(letter, font, new SolidBrush(Color.Black), (width-size.Width)/2, 0);\n\n    }\n\n    private Font FindBestFitFont(Graphics g, String text, Font font, Size proposedSize)\n    {\n        // Compute actual size, shrink if needed\n        while (true)\n        {\n            SizeF size = g.MeasureString(text, font);\n\n            // It fits, back out\n            if (size.Height &lt;= proposedSize.Height &amp;&amp;\n                 size.Width &lt;= proposedSize.Width) { return font; }\n\n            // Try a smaller font (90% of old size)\n            Font oldFont = font;\n            font = new Font(font.Name, (float)(font.Size * .9), font.Style);\n            oldFont.Dispose();\n        }\n    }
35	Generic type conversion FROM string	public class TypedProperty&lt;T&gt; : Property where T : IConvertible\n{\n    public T TypedValue\n    {\n        get { return (T)Convert.ChangeType(base.Value, typeof(T)); }\n        set { base.Value = value.ToString();}\n    }\n}
36	Best way to play MIDI sounds using C#	[DllImport("winmm.dll")] \nstatic extern Int32 mciSendString(String command, StringBuilder buffer, \n                                  Int32 bufferSize, IntPtr hwndCallback);
37	Best implementation for Key Value Pair Data Structure?	KeyValuePair&lt;string, string&gt; myKeyValuePair = new KeyValuePair&lt;string,string&gt;("defaultkey", "defaultvalue");
38	How do you retrieve selected text using Regex in C#?	int indexVal = 0;\nRegex re = new Regex(@"Index: (\d*)")\nMatch m = re.Match(s)\n\nif(m.Success)\n  indexVal = int.TryParse(m.Groups[1].toString());
40	Calculate DateTime Weeks into Rows	public int GetWeekRows(int year, int month)\n{\n    DateTime firstDayOfMonth = new DateTime(year, month, 1);\n    DateTime lastDayOfMonth = new DateTime(year, month, 1).AddMonths(1).AddDays(-1);\n    System.Globalization.Calendar calendar = System.Threading.Thread.CurrentThread.CurrentCulture.Calendar;\n    int lastWeek = calendar.GetWeekOfYear(lastDayOfMonth, System.Globalization.CalendarWeekRule.FirstFourDayWeek, DayOfWeek.Monday);\n    int firstWeek = calendar.GetWeekOfYear(firstDayOfMonth, System.Globalization.CalendarWeekRule.FirstFourDayWeek, DayOfWeek.Monday);\n    return lastWeek - firstWeek + 1;\n}
41	Delimited string parsing?	string filename = @textBox1.Text;\nstring[] fields;\nstring[] delimiter = new string[] {"|"};\nusing (Microsoft.VisualBasic.FileIO.TextFieldParser parser =\n       new Microsoft.VisualBasic.FileIO.TextFieldParser(filename)) {\n    parser.Delimiters = delimiter;\n    parser.HasFieldsEnclosedInQuotes = false;\n\n    while (!parser.EndOfData) {\n        fields = parser.ReadFields();\n        //Do what you need\n    }\n}
42	Best way to model Many-To-One Relationships in NHibernate When Dealing With a Legacy DB?	&lt;?xml version="1.0" encoding="utf-8" ?&gt;\n&lt;hibernate-mapping default-cascade="save-update" xmlns="urn:nhibernate-mapping-2.2"&gt;\n    &lt;class lazy="false" name="Namespace.Customer, Namespace" table="Customer"&gt;\n        &lt;id name="Id" type="Int32" unsaved-value="0"&gt;\n            &lt;column name="CustomerAccountId" length="4" sql-type="int" not-null="true" unique="true" index="CustomerPK"/&gt;\n            &lt;generator class="native" /&gt;\n        &lt;/id&gt;\n\n        &lt;bag name="AcceptedOffers" inverse="false" lazy="false" cascade="all-delete-orphan" table="details"&gt;\n          &lt;key column="CustomerAccountId" foreign-key="AcceptedOfferFK"/&gt;\n          &lt;many-to-many\n            class="Namespace.AcceptedOffer, Namespace"\n            column="AcceptedOfferFK"\n            foreign-key="AcceptedOfferID"\n            lazy="false"\n           /&gt;\n        &lt;/bag&gt;\n\n  &lt;/class&gt;\n&lt;/hibernate-mapping&gt;\n\n\n&lt;?xml version="1.0" encoding="utf-8" ?&gt;\n&lt;hibernate-mapping default-cascade="save-update" xmlns="urn:nhibernate-mapping-2.2"&gt;\n    &lt;class lazy="false" name="Namespace.AcceptedOffer, Namespace" table="AcceptedOffer"&gt;\n        &lt;id name="Id" type="Int32" unsaved-value="0"&gt;\n            &lt;column name="AcceptedOfferId" length="4" sql-type="int" not-null="true" unique="true" index="AcceptedOfferPK"/&gt;\n            &lt;generator class="native" /&gt;\n        &lt;/id&gt;\n\n        &lt;many-to-one \n          name="Plan"\n          class="Namespace.Plan, Namespace"\n          lazy="false"\n          cascade="save-update"\n        &gt;\n        &lt;column name="PlanFK" length="4" sql-type="int" not-null="false"/&gt;\n        &lt;/many-to-one&gt;\n\n        &lt;property name="StatusId" type="Int32"&gt;\n            &lt;column name="StatusId" length="4" sql-type="int" not-null="true"/&gt;\n        &lt;/property&gt;\n\n  &lt;/class&gt;\n&lt;/hibernate-mapping&gt;
43	Conditional Linq Queries	var logs = from log in context.Logs\n           select log;\n\nif (filterBySeverity)\n    logs = logs.Where(p =&gt; p.Severity == severity);\n\nif (filterByUser)\n    logs = logs.Where(p =&gt; p.User == user);
45	XPATHS and Default Namespaces	XmlDocument doc = new XmlDocument();\ndoc.LoadXml(xmlWithBogusNamespace);            \nXmlNamespaceManager nSpace = new XmlNamespaceManager(doc.NameTable);\nnSpace.AddNamespace("myNs", "http://theirUri");\n\nXmlNodeList nodes = doc.SelectNodes("//myNs:NodesIWant",nSpace);\n//etc
46	Clearing Page Cache in ASP.NET	HttpResponse.RemoveOutputCacheItem("/caching/CacheForever.aspx");
48	Calling the base constructor in C#	public class MyExceptionClass : Exception\n{\n    public MyExceptionClass(string message, string extrainfo) : base(message)\n    {\n        //other stuff here\n    }\n}
49	Problems with #import of .NET out-of-proc server	#import "server.tlb" no_namespace named_guids
50	C# Database Access: DBNull vs null	DBNull
51	Best method of Textfile Parsing in C#?	customer:\n  name: Orion\n  age: 26\n  addresses:\n    - type: Work\n      number: 12\n      street: Bob Street\n    - type: Home\n      number: 15\n      street: Secret Road
52	Bit fields in C#	using System;\n\nnamespace BitfieldTest\n{\n    [global::System.AttributeUsage(AttributeTargets.Field, AllowMultiple = false)]\n    sealed class BitfieldLengthAttribute : Attribute\n    {\n        uint length;\n\n        public BitfieldLengthAttribute(uint length)\n        {\n            this.length = length;\n        }\n\n        public uint Length { get { return length; } }\n    }\n\n    static class PrimitiveConversion\n    {\n        public static long ToLong&lt;T&gt;(T t) where T : struct\n        {\n            long r = 0;\n            int offset = 0;\n\n            // For every field suitably attributed with a BitfieldLength\n            foreach (System.Reflection.FieldInfo f in t.GetType().GetFields())\n            {\n                object[] attrs = f.GetCustomAttributes(typeof(BitfieldLengthAttribute), false);\n                if (attrs.Length == 1)\n                {\n                    uint fieldLength  = ((BitfieldLengthAttribute)attrs[0]).Length;\n\n                    // Calculate a bitmask of the desired length\n                    long mask = 0;\n                    for (int i = 0; i &lt; fieldLength; i++)\n                        mask |= 1 &lt;&lt; i;\n\n                    r |= ((UInt32)f.GetValue(t) &amp; mask) &lt;&lt; offset;\n\n                    offset += (int)fieldLength;\n                }\n            }\n\n            return r;\n        }\n    }\n\n    struct PESHeader\n    {\n        [BitfieldLength(2)]\n        public uint reserved;\n        [BitfieldLength(2)]\n        public uint scrambling_control;\n        [BitfieldLength(1)]\n        public uint priority;\n        [BitfieldLength(1)]\n        public uint data_alignment_indicator;\n        [BitfieldLength(1)]\n        public uint copyright;\n        [BitfieldLength(1)]\n        public uint original_or_copy;\n    };\n\n    public class MainClass\n    {\n        public static void Main(string[] args)\n        {\n            PESHeader p = new PESHeader();\n\n            p.reserved = 3;\n            p.scrambling_control = 2;\n            p.data_alignment_indicator = 1;\n\n            long l = PrimitiveConversion.ToLong(p);\n\n\n            for (int i = 63; i &gt;= 0; i--)\n            {\n                Console.Write( ((l &amp; (1l &lt;&lt; i)) &gt; 0) ? "1" : "0");\n            }\n\n            Console.WriteLine();\n\n            return;\n        }\n    }\n}
53	UrlEncode through a console application?	Uri.EscapeUriString(url);
55	Aging Data Structure in C#	list.push_end(new_data)\nwhile list.head.age &gt;= age_limit:\n    list.pop_head()
56	Design problems with .Net UserControl	[DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]\npublic ListView MyListView { get { return this.listView1; } }
57	How do I automate repetitive tasks post-build?	&lt;Target Name="AfterBuild"&gt;\n    &lt;!-- ============================ Script Compression============================ --&gt;\n    &lt;MakeDir Directories="$(OutputPath)\compressed" /&gt;\n    &lt;Exec Command="java -jar c:\yuicompressor-2.2.5\build\yuicompressor-2.2.5.jar --charset UTF-8 styles.css -o compressed/styles.css" WorkingDirectory="$(OutputPath)" /&gt;\n    &lt;Exec Command="move /Y .\compressed\* .\" WorkingDirectory="$(OutputPath)" /&gt;\n    &lt;RemoveDir Directories="$(OutputPath)\sql" /&gt;\n    &lt;Exec Command="c:\7zip-4.4.2\7za.exe a $(ZipName).zip $(OutputPath)\*" /&gt;\n  &lt;/Target&gt;
58	C# Auto Clearing Winform Textbox	TextBox1.Select(0, TextBox1.Text.Length);
59	String output: format or concat in C#?	Stopwatch s = new Stopwatch();\n\nvar p = new { FirstName = "Bill", LastName = "Gates" };\n\nint n = 1000000;\nlong fElapsedMilliseconds = 0, fElapsedTicks = 0, cElapsedMilliseconds = 0, cElapsedTicks = 0;\n\nstring result;\ns.Start();\nfor (var i = 0; i &lt; n; i++)\n    result = (p.FirstName + " " + p.LastName);\ns.Stop();\ncElapsedMilliseconds = s.ElapsedMilliseconds;\ncElapsedTicks = s.ElapsedTicks;\ns.Reset();\ns.Start();\nfor (var i = 0; i &lt; n; i++)\n    result = string.Format("{0} {1}", p.FirstName, p.LastName);\ns.Stop();\nfElapsedMilliseconds = s.ElapsedMilliseconds;\nfElapsedTicks = s.ElapsedTicks;\ns.Reset();\n\n\nConsole.Clear();\nConsole.WriteLine(n.ToString()+" x result = string.Format(\"{0} {1}\", p.FirstName, p.LastName); took: " + (fElapsedMilliseconds) + "ms - " + (fElapsedTicks) + " ticks");\nConsole.WriteLine(n.ToString() + " x result = (p.FirstName + \" \" + p.LastName); took: " + (cElapsedMilliseconds) + "ms - " + (cElapsedTicks) + " ticks");\nThread.Sleep(4000);
60	What's the best way to implement field validation using ASP.NET MVC?	public JsonResult CheckUserName(string username)\n{\n    return Json(CheckValidUsername(username));\n}
61	PHPs htmlspecialcharacters equivalent in .NET?	var encodedHtml = HttpContext.Current.Server.HtmlEncode(...);
62	Reading "chunked" response with HttpWebResponse	StringBuilder sb = new StringBuilder();\nByte[] buf = new byte[8192];\nStream resStream = response.GetResponseStream();\nstring tmpString = null;\nint count = 0;\ndo\n{\n     count = resStream.Read(buf, 0, buf.Length);\n     if(count != 0)\n     {\n          tmpString = Encoding.ASCII.GetString(buf, 0, count);\n          sb.Append(tmpString);\n     }\n}while (count &gt; 0);
63	Should I *always* favour implictly typed local variables in C# 3.0?	var result = GetUserID();
64	What are real life applications of yield?	Ideally some problem that cannot be solved some other way
65	Privatizing a BlogEngine.Net Installation	using System;\n\nusing System.Data;\n\nusing System.Configuration;\n\nusing System.Web;\n\nusing System.Web.Security;\n\nusing System.Web.UI;\n\nusing System.Web.UI.HtmlControls;\n\nusing System.Web.UI.WebControls;\n\nusing System.Web.UI.WebControls.WebParts;\n\nusing BlogEngine.Core;\n\nusing BlogEngine.Core.Web.Controls;\n\nusing System.Collections.Generic;\n\n\n\n/// &lt;summary&gt;\n\n/// Summary description for PostSecurity\n\n/// &lt;/summary&gt;\n\n[Extension("Checks to see if a user can see this blog post.",\n\n            "1.0", "&lt;a href=\"http://www.lavablast.com\"&gt;LavaBlast.com&lt;/a&gt;")]\n\npublic class RequireLogin\n{\n\n    static protected ExtensionSettings settings = null;\n\n\n\n    public RequireLogin()\n    {\n\n        Post.Serving += new EventHandler&lt;ServingEventArgs&gt;(Post_Serving);\n\n\n\n        ExtensionSettings s = new ExtensionSettings("RequireLogin");\n\n        // describe specific rules for entering parameters\n\n        s.Help = "Checks to see if the user has any of those roles before displaying the post. ";\n\n        s.Help += "You can associate a role with a specific category. ";\n\n        s.Help += "All posts having this category will require that the user have the role. ";\n\n        s.Help += "A parameter with only a role without a category will enable to filter all posts to this role. ";\n\n        ExtensionManager.ImportSettings(s);\n\n        settings = ExtensionManager.GetSettings("PostSecurity");\n\n    }\n\n\n\n    protected void Post_Serving(object sender, ServingEventArgs e)\n    {\n        MembershipUser user = Membership.GetUser();\n        if(HttpContext.Current.Request.RawUrl.Contains("syndication.axd"))\n        {\n            return;\n        }\n\n        if (user == null)\n        {\n            HttpContext.Current.Response.Redirect("~/Login.aspx");\n        }\n    }\n}
66	Request Windows Vista UAC elevation if path is protected?	UnauthorizedAccessException
67	How do you place a file in recycle bin instead of delete?	using Microsoft.VisualBasic;\n\nstring path = @"c:\myfile.txt";\nFileIO.FileSystem.DeleteDirectory(path, \n    FileIO.UIOption.OnlyErrorDialogs, \n    RecycleOption.SendToRecycleBin);
68	Anyone know a quick way to get to custom attributes on an enum value?	public delegate object FastPropertyGetHandler(object target);    \n\nprivate static void EmitBoxIfNeeded(ILGenerator ilGenerator, System.Type type)\n{\n    if (type.IsValueType)\n    {\n        ilGenerator.Emit(OpCodes.Box, type);\n    }\n}\n\npublic static FastPropertyGetHandler GetPropertyGetter(PropertyInfo propInfo)\n{\n    // generates a dynamic method to generate a FastPropertyGetHandler delegate\n    DynamicMethod dynamicMethod =\n        new DynamicMethod(\n            string.Empty, \n            typeof (object), \n            new Type[] { typeof (object) },\n            propInfo.DeclaringType.Module);\n\n    ILGenerator ilGenerator = dynamicMethod.GetILGenerator();\n    // loads the object into the stack\n    ilGenerator.Emit(OpCodes.Ldarg_0);\n    // calls the getter\n    ilGenerator.EmitCall(OpCodes.Callvirt, propInfo.GetGetMethod(), null);\n    // creates code for handling the return value\n    EmitBoxIfNeeded(ilGenerator, propInfo.PropertyType);\n    // returns the value to the caller\n    ilGenerator.Emit(OpCodes.Ret);\n    // converts the DynamicMethod to a FastPropertyGetHandler delegate\n    // to get the property\n    FastPropertyGetHandler getter =\n        (FastPropertyGetHandler) \n        dynamicMethod.CreateDelegate(typeof(FastPropertyGetHandler));\n\n\n    return getter;\n}
70	In C#, do you need to call the base constructor?	using System;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            MyClass foo = new MyClass();\n\n            Console.ReadLine();\n        }\n    }\n\n    class BaseClass\n    {\n        public BaseClass()\n        {\n            Console.WriteLine("BaseClass constructor called.");\n        }\n    }\n\n    class MyClass : BaseClass\n    {\n        public MyClass()\n        {\n            Console.WriteLine("MyClass constructor called.");\n        }\n    }\n}
71	Most succinct way to determine if a variable equals a value from a 'list' of values	bool b = new int[] { 3,7,12,5 }.Contains(5);
72	Why can't you bind the Size of a windows form to ApplicationSettings?	// Consider this code public domain. If you want, you can even tell\n// your boss, attractive women, or the other guy in your cube that\n// you wrote it. Enjoy!\n\nusing System;\nusing System.Windows.Forms;\nusing System.ComponentModel;\nusing System.Drawing;\n\nnamespace Utilities\n{\n    public class RestorableForm : Form, INotifyPropertyChanged\n    {\n        // We invoke this event when the binding needs to be updated.\n        public event PropertyChangedEventHandler PropertyChanged;\n\n        // This stores the last window position and state\n        private WindowRestoreStateInfo windowRestoreState;\n\n        // Now we define the property that we will bind to our settings.\n        [Browsable(false)]        // Don't show it in the Properties list\n        [SettingsBindable(true)]  // But do enable binding to settings\n        public WindowRestoreStateInfo WindowRestoreState\n        {\n            get { return windowRestoreState; }\n            set\n            {\n                windowRestoreState = value;\n                if (PropertyChanged != null)\n                {\n                    // If anybody's listening, let them know the\n                    // binding needs to be updated:\n                    PropertyChanged(this,\n                        new PropertyChangedEventArgs("WindowRestoreState"));\n                }\n            }\n        }\n\n        protected override void OnClosing(CancelEventArgs e)\n        {\n            WindowRestoreState = new WindowRestoreStateInfo();\n            WindowRestoreState.Bounds\n                = WindowState == FormWindowState.Normal ?\n                  Bounds : RestoreBounds;\n            WindowRestoreState.WindowState = WindowState;\n\n            base.OnClosing(e);\n        }\n\n        protected override void OnLoad(EventArgs e)\n        {\n            base.OnLoad(e);\n\n            if (WindowRestoreState != null)\n            {\n                Bounds = ConstrainToScreen(WindowRestoreState.Bounds);\n                WindowState = WindowRestoreState.WindowState;\n            }\n        }\n\n        // This helper class stores both position and state.\n        // That way, we only have to set one binding.\n        public class WindowRestoreStateInfo\n        {\n            Rectangle bounds;\n            public Rectangle Bounds\n            {\n                get { return bounds; }\n                set { bounds = value; }\n            }\n\n            FormWindowState windowState;\n            public FormWindowState WindowState\n            {\n                get { return windowState; }\n                set { windowState = value; }\n            }\n        }\n\n        private Rectangle ConstrainToScreen(Rectangle bounds)\n        {\n            Screen screen = Screen.FromRectangle(WindowRestoreState.Bounds);\n            Rectangle workingArea = screen.WorkingArea;\n\n            int width = Math.Min(bounds.Width, workingArea.Width);\n            int height = Math.Min(bounds.Height, workingArea.Height);\n\n            // mmm....minimax\n            int left = Math.Min(workingArea.Right - width,\n                                Math.Max(bounds.Left, workingArea.Left));\n            int top = Math.Min(workingArea.Bottom - height,\n                                Math.Max(bounds.Top, workingArea.Top));\n\n            return new Rectangle(left, top, width, height);\n        }\n    }\n}
74	Importing C++ enumerations into C#	public enum eDeviceIntErrCodes \n    {\n        /// eDEVICEINT_ERR_FATAL -> 0x10001\n        eDEVICEINT_ERR_FATAL = 65537,\n    }
75	Enforce Attribute Decoration of Classes/Methods	[TestClass]\npublic class When_type_inherits_MyObject\n{\n    private readonly List&lt;Type&gt; _types = new List&lt;Type&gt;();\n\n    public When_type_inherits_MyObject()\n    {\n        // lets find all types that inherit from MyObject, directly or indirectly\n        foreach(Type type in typeof(MyObject).Assembly.GetTypes())\n        {\n            if(type.IsClass &amp;&amp; typeof(MyObject).IsAssignableFrom(type))\n            {\n                _types.Add(type);\n            }\n        }\n    }\n\n    [TestMethod]\n    public void Properties_have_XmlElement_attribute\n    {\n        foreach(Type type in _types)\n        {\n            foreach(PropertyInfo property in type.GetProperties())\n            {\n                object[] attribs = property.GetCustomAttributes(typeof(XmlElementAttribute), false);\n                Assert.IsTrue(attribs.Count &gt; 0, "Missing XmlElementAttribute on property " + property.Name + " in type " + type.FullName);\n            }\n        }\n    }\n}
76	Enforcing required function call	using System;\n\npublic class Example\n{\n    public class Toy\n    {\n        private bool inCupboard = false;\n        public void Play() { Console.WriteLine("Playing."); }\n        public void PutAway() { inCupboard = true; }\n        public bool IsInCupboard { get { return inCupboard; } }\n    }\n\n    public delegate void ToyUseCallback(Toy toy);\n\n    public class Parent\n    {\n        public static void RequestToy(ToyUseCallback callback)\n        {\n            Toy toy = new Toy();\n            callback(toy);\n            if (!toy.IsInCupboard)\n            {\n                throw new Exception("You didn't put your toy in the cupboard!");\n            }\n        }\n    }\n\n    public class Child\n    {\n        public static void Play()\n        {\n            Parent.RequestToy(delegate(Toy toy)\n            {\n                toy.Play();\n                // Oops! Forgot to put the toy away!\n            });\n        }\n    }\n\n    public static void Main()\n    {\n        Child.Play();\n        Console.ReadLine();\n    }\n}
77	Store data from a C# application	using (FileStream fs = new FileStream(....))\n{\n    // Read in stats\n    XmlSerializer xs = new XmlSerializer(typeof(GameStats));\n    GameStats stats = (GameStats)xs.Deserialize(fs);\n\n    // Manipulate stats here ...\n\n    // Write out game stats\n    XmlSerializer xs = new XmlSerializer(typeof(GameStats));\n    xs.Serialize(fs, stats);\n\n    fs.Close();\n}
79	Is there a way to make a constructor only visible to a parent class in C#?	public abstract class AbstractClass\n{\n    public static AbstractClass MakeAbstractClass(string args)\n    {\n        if (args == "a")\n            return new ConcreteClassA();\n        if (args == "b")\n            return new ConcreteClassB();\n    }\n\n    private class ConcreteClassA : AbstractClass\n    {\n    }\n\n    private class ConcreteClassB : AbstractClass\n    {\n    }\n}
80	How do you remove invalid hexadecimal characters from an XML-based data source prior to constructing an XmlReader or XPathDocument that uses the data?	/// &lt;summary&gt;\n/// Removes control characters and other non-UTF-8 characters\n/// &lt;/summary&gt;\n/// &lt;param name="inString"&gt;The string to process&lt;/param&gt;\n/// &lt;returns&gt;A string with no control characters or entities above 0x00FD&lt;/returns&gt;\npublic static string RemoveTroublesomeCharacters(string inString)\n{\n    if (inString == null) return null;\n\n    StringBuilder newString = new StringBuilder();\n    char ch;\n\n    for (int i = 0; i &lt; inString.Length; i++)\n    {\n\n        ch = inString[i];\n        // remove any characters outside the valid UTF-8 range as well as all control characters\n        // except tabs and new lines\n        //if ((ch &lt; 0x00FD &amp;&amp; ch &gt; 0x001F) || ch == '\t' || ch == '\n' || ch == '\r')\n        //if using .NET version prior to 4, use above logic\n        if (XmlConvert.IsXmlChar(ch)) //this method is new in .NET 4\n        {\n            newString.Append(ch);\n        }\n    }\n    return newString.ToString();\n\n}
81	How to split a byte array	using System;\nusing System.Collections;\nusing System.Collections.Generic;\n\nclass ArrayView&lt;T&gt; : IEnumerable&lt;T&gt;\n{\n    private readonly T[] array;\n    private readonly int offset, count;\n\n    public ArrayView(T[] array, int offset, int count)\n    {\n        this.array = array;\n        this.offset = offset;\n        this.count = count;\n    }\n\n    public int Length\n    {\n        get { return count; }\n    }\n\n    public T this[int index]\n    {\n        get\n        {\n            if (index &lt; 0 || index &gt;= this.count)\n                throw new IndexOutOfRangeException();\n            else\n                return this.array[offset + index];\n        }\n        set\n        {\n            if (index &lt; 0 || index &gt;= this.count)\n                throw new IndexOutOfRangeException();\n            else\n                this.array[offset + index] = value;\n        }\n    }\n\n    public IEnumerator&lt;T&gt; GetEnumerator()\n    {\n        for (int i = offset; i &lt; offset + count; i++)\n            yield return array[i];\n    }\n\n    IEnumerator IEnumerable.GetEnumerator()\n    {\n        IEnumerator&lt;T&gt; enumerator = this.GetEnumerator();\n        while (enumerator.MoveNext())\n        {\n            yield return enumerator.Current;\n        }\n    }\n}\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        byte[] arr = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 };\n        ArrayView&lt;byte&gt; p1 = new ArrayView&lt;byte&gt;(arr, 0, 5);\n        ArrayView&lt;byte&gt; p2 = new ArrayView&lt;byte&gt;(arr, 5, 5);\n        Console.WriteLine("First array:");\n        foreach (byte b in p1)\n        {\n            Console.Write(b);\n        }\n        Console.Write("\n");\n        Console.WriteLine("Second array:");\n        foreach (byte b in p2)\n        {\n            Console.Write(b);\n        }\n        Console.ReadKey();\n    }\n}
82	How Do You Communicate Service Layer Messages/Errors to Higher Layers Using MVP?	try {\n  // call service etc.\n  // handle success to view\n} \ncatch (AccountAlreadyExistsException) {\n  // set the message and some other unique data in the view\n}\ncatch (ServiceLayerException) {\n  // set the message in the view\n}\n// system exceptions, and unrecoverable exceptions are allowed to bubble \n// up the call stack so a general error can be shown to the user, rather \n// than showing the form again.
83	Loading assemblies and its dependencies	AppDomain currentDomain = AppDomain.CurrentDomain;\ncurrentDomain.AssemblyResolve += new ResolveEventHandler(MyResolveEventHandler);
84	How to late bind 32bit/64 bit libs at runtime	static void Main(String[] argv)\n  {\n     // Create a new AppDomain, but with the base directory set to either the 32-bit or 64-bit\n     // sub-directories.\n\n     AppDomainSetup objADS = new AppDomainSetup();\n\n     System.String assemblyDir = System.IO.Path.GetDirectoryName(Application.ExecutablePath);\n     switch (System.IntPtr.Size)\n     {\n        case (4): assemblyDir += "\\win32\\";\n           break;\n        case (8): assemblyDir += "\\x64\\";\n           break;\n     }\n\n     objADS.ApplicationBase = assemblyDir;\n\n     // We set the PrivateBinPath to the application directory, so that we can still\n     // load the platform neutral assemblies from the app directory.\n     objADS.PrivateBinPath = System.IO.Path.GetDirectoryName(Application.ExecutablePath);\n\n     AppDomain objAD = AppDomain.CreateDomain("", null, objADS);\n     if (argv.Length &gt; 0)\n        objAD.ExecuteAssembly(argv[0]);\n     else\n        objAD.ExecuteAssembly("MyApplication.exe");\n\n     AppDomain.Unload(objAD);\n\n  }
85	How do you prevent leading zeros from being stripped when importing an excel doc using c#	Provider=Microsoft.ACE.OLEDB.12.0;\n    Data Source=c:\path\to\myfile.xlsx;\n    Extended Properties=\"Excel 12.0 Xml;IMEX=1\";
86	Conditional formatting -- percentage to color conversion	function setColor(p){\n    var red = p&lt;50 ? 255 : Math.round(256 - (p-50)*5.12);\n    var green = p&gt;50 ? 255 : Math.round((p)*5.12);\n    return "rgb(" + red + "," + green + ",0)";\n}
88	Reserved Keyword in Enumeration in C#	public enum Test\n{\n    @as = 1,\n    @is = 2\n}
89	What would be the fastest way to remove Newlines from a String in C#?	string s = "foobar\ngork";\nstring v = s.Replace(Environment.NewLine,",");\nSystem.Console.WriteLine(v);
90	How do I intercept a method call in C#?	[Log()]\npublic void Method1(String name, Int32 value);
91	What's the simplest way to connect to a .NET remote server object	//obtain another marshalbyref object of the type ISessionManager:\nISessionManager = MyServerObject.GetSessionManager();
92	Filtering collections in C#	List&lt;int&gt; myList = GetListOfIntsFromSomewhere();\n\n// This will filter out the list of ints that are &gt; than 7, Where returns an\n// IEnumerable&lt;T&gt; so a call to ToList is required to convert back to a List&lt;T&gt;.\nList&lt;int&gt; filteredList = myList.Where( x =&gt; x &gt; 7).ToList();
93	Fastest C# Code to Download a Web Page	public static void DownloadFile(string remoteFilename, string localFilename)\n{\n    WebClient client = new WebClient();\n    client.DownloadFile(remoteFilename, localFilename);\n}
94	Print a barcode to a Intermec PB20 via the LinePrinter API	Intermec.Print.LinePrinter lp;\n\nint escapeCharacter = int.Parse("1b", NumberStyles.HexNumber);\nchar[] toEzPrintMode = new char[] { Convert.ToChar(num2), 'E', 'Z' };\n\nlp = new Intermec.Print.LinePrinter("Printer_Config.XML", "PrinterPB20_40COL");\nlp.Open();\n\nlp.Write(charArray2); //switch to ez print mode\n\nstring testBarcode = "{PRINT:@75,10:PD417,YDIM 6,XDIM 2,COLUMNS 2, SECURITY 3|ABCDEFGHIJKL|}";\nlp.Write(testBarcode);\n\nlp.Write("{LP}"); //switch from ez print mode back to line printer mode\n\nlp.NewLine();\nlp.Write("Test"); //verify line printer mode is working
95	.NET Multi Dimensional Array Printing	public static string Format(Array array)\n{\n    var builder = new StringBuilder();\n    builder.AppendLine("Count: " + array.Length);\n    var counter = 0;\n\n    var dimensions = new List&lt;int&gt;();\n    for (int i = 0; i &lt; array.Rank; i++)\n    {\n        dimensions.Add(array.GetUpperBound(i) + 1);\n    }\n\n    foreach (var current in array)\n    {\n        var index = "";\n        var remainder = counter;\n        foreach (var bound in dimensions)\n        {\n            index = remainder % bound + ", " + index;\n            remainder = remainder / bound;\n        }\n        index = index.Substring(0, index.Length - 2);\n\n        builder.AppendLine("   [" + index + "] " + current);\n        counter++;\n    }\n    return builder.ToString();\n}
96	Parse string to TimeSpan	TimeSpan span;\n\n\nif (TimeSpan.TryParse("05h:30m".Replace("m","").Replace("h",""), out span))\n            MessageBox.Show(span.ToString());
97	How do you programmatically fill in a form and 'POST' a web page?	WebRequest req = WebRequest.Create("http://mysite/myform.aspx");\nstring postData = "item1=11111&amp;item2=22222&amp;Item3=33333";\n\nbyte[] send = Encoding.Default.GetBytes(postData);\nreq.Method = "POST";\nreq.ContentType = "application/x-www-form-urlencoded";\nreq.ContentLength = send.Length;\n\nStream sout = req.GetRequestStream();\nsout.Write(send, 0, send.Length);\nsout.Flush();\nsout.Close();\n\nWebResponse res = req.GetResponse();\nStreamReader sr = new StreamReader(res.GetResponseStream());\nstring returnvalue = sr.ReadToEnd();
99	How can I discover the "path" of an embedded resource?	System.Reflection.Assembly.GetExecutingAssembly().GetManifestResourceNames();
100	How to get SpecUnit to run within a TeamCity CI build	&lt;exec program="${output.dir}SpecUnit.Report.exe" verbose="true"&gt;\n      &lt;arg value="${output.dir}${acceptance.tests.assembly}" /&gt;\n    &lt;/exec&gt;
102	Compact Framework - how do I dynamically create type with no default constructor?	MyObj o = null;\nAssembly a = Assembly.LoadFrom("my.dll");\nType t = a.GetType("type info here");\n\nConstructorInfo ctor = t.GetConstructor(new Type[] { typeof(string) });\nif(ctor != null)\n   o = ctor.Invoke(new object[] { s });
104	How do you stop the Designer generating code for public properties on a User Control?	[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]\npublic string Name\n{\n    get;\n    set;\n}
105	How to know if a line intersects a plane in C#? - Basic 2D geometry	public struct Line\n{\n    public static Line Empty;\n\n    private PointF p1;\n    private PointF p2;\n\n    public Line(PointF p1, PointF p2)\n    {\n        this.p1 = p1;\n        this.p2 = p2;\n    }\n\n    public PointF P1\n    {\n        get { return p1; }\n        set { p1 = value; }\n    }\n\n    public PointF P2\n    {\n        get { return p2; }\n        set { p2 = value; }\n    }\n\n    public float X1\n    {\n        get { return p1.X; }\n        set { p1.X = value; }\n    }\n\n    public float X2\n    {\n        get { return p2.X; }\n        set { p2.X = value; }\n    }\n\n    public float Y1\n    {\n        get { return p1.Y; }\n        set { p1.Y = value; }\n    }\n\n    public float Y2\n    {\n        get { return p2.Y; }\n        set { p2.Y = value; }\n    }\n}\n\npublic struct Polygon: IEnumerable&lt;PointF&gt;\n{\n    private PointF[] points;\n\n    public Polygon(PointF[] points)\n    {\n        this.points = points;\n    }\n\n    public PointF[] Points\n    {\n        get { return points; }\n        set { points = value; }\n    }\n\n    public int Length\n    {\n        get { return points.Length; }\n    }\n\n    public PointF this[int index]\n    {\n        get { return points[index]; }\n        set { points[index] = value; }\n    }\n\n    public static implicit operator PointF[](Polygon polygon)\n    {\n        return polygon.points;\n    }\n\n    public static implicit operator Polygon(PointF[] points)\n    {\n        return new Polygon(points);\n    }\n\n    IEnumerator&lt;PointF&gt; IEnumerable&lt;PointF&gt;.GetEnumerator()\n    {\n        return (IEnumerator&lt;PointF&gt;)points.GetEnumerator();\n    }\n\n    public IEnumerator GetEnumerator()\n    {\n        return points.GetEnumerator();\n    }\n}\n\npublic enum Intersection\n{\n    None,\n    Tangent,\n    Intersection,\n    Containment\n}\n\npublic static class Geometry\n{\n\n    public static Intersection IntersectionOf(Line line, Polygon polygon)\n    {\n        if (polygon.Length == 0)\n        {\n            return Intersection.None;\n        }\n        if (polygon.Length == 1)\n        {\n            return IntersectionOf(polygon[0], line);\n        }\n        bool tangent = false;\n        for (int index = 0; index &lt; polygon.Length; index++)\n        {\n            int index2 = (index + 1)%polygon.Length;\n            Intersection intersection = IntersectionOf(line, new Line(polygon[index], polygon[index2]));\n            if (intersection == Intersection.Intersection)\n            {\n                return intersection;\n            }\n            if (intersection == Intersection.Tangent)\n            {\n                tangent = true;\n            }\n        }\n        return tangent ? Intersection.Tangent : IntersectionOf(line.P1, polygon);\n    }\n\n    public static Intersection IntersectionOf(PointF point, Polygon polygon)\n    {\n        switch (polygon.Length)\n        {\n            case 0:\n                return Intersection.None;\n            case 1:\n                if (polygon[0].X == point.X &amp;&amp; polygon[0].Y == point.Y)\n                {\n                    return Intersection.Tangent;\n                }\n                else\n                {\n                    return Intersection.None;\n                }\n            case 2:\n                return IntersectionOf(point, new Line(polygon[0], polygon[1]));\n        }\n\n        int counter = 0;\n        int i;\n        PointF p1;\n        int n = polygon.Length;\n        p1 = polygon[0];\n        if (point == p1)\n        {\n            return Intersection.Tangent;\n        }\n\n        for (i = 1; i &lt;= n; i++)\n        {\n            PointF p2 = polygon[i % n];\n            if (point == p2)\n            {\n                return Intersection.Tangent;\n            }\n            if (point.Y &gt; Math.Min(p1.Y, p2.Y))\n            {\n                if (point.Y &lt;= Math.Max(p1.Y, p2.Y))\n                {\n                    if (point.X &lt;= Math.Max(p1.X, p2.X))\n                    {\n                        if (p1.Y != p2.Y)\n                        {\n                            double xinters = (point.Y - p1.Y) * (p2.X - p1.X) / (p2.Y - p1.Y) + p1.X;\n                            if (p1.X == p2.X || point.X &lt;= xinters)\n                                counter++;\n                        }\n                    }\n                }\n            }\n            p1 = p2;\n        }\n\n        return (counter % 2 == 1) ? Intersection.Containment : Intersection.None;\n    }\n\n    public static Intersection IntersectionOf(PointF point, Line line)\n    {\n        float bottomY = Math.Min(line.Y1, line.Y2);\n        float topY = Math.Max(line.Y1, line.Y2);\n        bool heightIsRight = point.Y &gt;= bottomY &amp;&amp;\n                             point.Y &lt;= topY;\n        //Vertical line, slope is divideByZero error!\n        if (line.X1 == line.X2)\n        {\n            if (point.X == line.X1 &amp;&amp; heightIsRight)\n            {\n                return Intersection.Tangent;\n            }\n            else\n            {\n                return Intersection.None;\n            }\n        }\n        float slope = (line.X2 - line.X1)/(line.Y2 - line.Y1);\n        bool onLine = (line.Y1 - point.Y) == (slope*(line.X1 - point.X));\n        if (onLine &amp;&amp; heightIsRight)\n        {\n            return Intersection.Tangent;\n        }\n        else\n        {\n            return Intersection.None;\n        }\n    }\n\n}
106	How can I format a javascript date to be serialized by jQuery	string dateString = "5/1/2008 8:30:52 AM";\nDateTime date1 = DateTime.Parse(dateString, CultureInfo.InvariantCulture);
107	Resize transparent images using C#	using (Image src = Image.FromFile("main.gif"))\nusing (Bitmap dst = new Bitmap(100, 129))\nusing (Graphics g = Graphics.FromImage(dst))\n{\n   g.SmoothingMode = SmoothingMode.AntiAlias;\n   g.InterpolationMode = InterpolationMode.HighQualityBicubic;\n   g.DrawImage(src, 0, 0, dst.Width, dst.Height);\n   dst.Save("scale.png", ImageFormat.Png);\n}
108	What's the best way to allow a user to browse for a file in C#?	using (OpenFileDialog dlg = new OpenFileDialog())\n{\n    dlg.Title = "Select a file";\n    if (dlg.ShowDialog()== DialogResult.OK)\n    {\n        //do something with dlg.FileName  \n    }\n}
109	What is the best way to inherit an array that needs to store subclass specific data?	abstract class Vehicle&lt;T&gt; where T : Axle\n{\n  public string Name;\n  public List&lt;T&gt; Axles;\n}\n\nclass Motorcycle : Vehicle&lt;MotorcycleAxle&gt;\n{\n}\n\nclass Car : Vehicle&lt;CarAxle&gt;\n{\n}\n\nabstract class Axle\n{\n  public int Length;\n  public void Turn(int numTurns) { ... }\n}\n\nclass MotorcycleAxle : Axle\n{\n  public bool WheelAttached;\n}\n\nclass CarAxle : Axle\n{\n  public bool LeftWheelAttached;\n  public bool RightWheelAttached;\n}
110	Constructors with the same argument type	public Person(LogonName ln)\n{\n    this.Load(ln.ToString());\n}\n\npublic Person(BadgeNumber bn)\n{\n    //load logic here...\n}
111	Best way to test if a generic type is a string? (c#)	if (typeof(T) == typeof(String)) return (T)(object)String.Empty;
112	How can I convert IEnumerable<T> to List<T> in C#?	var matches = dict.Values.Where(rec =&gt; rec.Name == "foo").ToList();
113	C# - SQLClient - Simplest INSERT	using (var conn = new SqlConnection(yourConnectionString))\n{\n    var cmd = new SqlCommand("insert into Foo values (@bar)", conn);\n    cmd.Parameters.AddWithValue("@bar", 17);\n    conn.Open();\n    cmd.ExecuteNonQuery();\n}
115	Disable asp.net radiobutton with javascript	private static void DisableControl(WebControl control)\n    {\n        Type controlType = control.GetType();\n\n        if (controlType == typeof(CheckBox))\n        {\n            ((CheckBox)control).InputAttributes.Add("disabled", "disabled");\n\n        }\n        else if (controlType == typeof(RadioButton))\n        {\n            ((RadioButton)control).InputAttributes.Add("disabled", "true");\n        }\n        else if (controlType == typeof(ImageButton))\n        {\n            ((ImageButton)control).Enabled = false;\n        }\n        else\n        {\n            control.Attributes.Add("readonly", "readonly");\n        }\n    }
116	Accessing static fields in XAML	&lt;ResoureDictionary ...\n  xmlns:local="clr-namespace:Namespace.Where.Your.BaseThingy.Class.Is.Defined"\n&gt;\n  &lt;Style BasedOn="{x:Static local:BaseThingy.BaseStyle}" TargetType="BaseThingy" /&gt;\n&lt;/ResourceDictionary&gt;
117	Popularity algorithm	t = (time of entry post) - (Dec 8, 2005)\nx = upvotes - downvotes\n\ny = {1 if x &gt; 0, 0 if x = 0, -1 if x &lt; 0)\nz = {1 if x &lt; 1, otherwise x}\n\nlog(z) + (y * t)/45000
119	How do I get today's date in C# in mm/dd/yyyy format?	DateTime.Now.ToString("M/d/yyyy");
120	Caching Active Directory Data	System.DirectoryServices.DirectoryEntry entry = new System.DirectoryServices.DirectoryEntry();               \n\n// Push the property values from AD back to cache.\n\nentry.RefreshCache(new string[] {"cn", "www" });
121	How do I truncate a string while converting to bytes in C#?	static string Truncate(string s, int maxLength) {\n    if (Encoding.UTF8.GetByteCount(s) &lt;= maxLength)\n        return s;\n    var cs = s.ToCharArray();\n    int length = 0;\n    int i = 0;\n    while (i &lt; cs.Length){\n        int charSize = 1;\n        if (i &lt; (cs.Length - 1) &amp;&amp; char.IsSurrogate(cs[i]))\n            charSize = 2;\n        int byteSize = Encoding.UTF8.GetByteCount(cs, i, charSize);\n        if ((byteSize + length) &lt;= maxLength){\n            i = i + charSize;\n            length += byteSize;\n        }\n        else\n            break;\n    }\n    return s.Substring(0, i);\n}
122	Is there a standard (like phpdoc or python's docstring) for commenting C# code?	/// &lt;summary&gt;\n/// Authenticates a user based on a username and password.\n/// &lt;/summary&gt;\n/// &lt;param name="username"&gt;The username.&lt;/param&gt;\n/// &lt;param name="password"&gt;The password.&lt;/param&gt;\n/// &lt;returns&gt;\n/// True, if authentication is successful, otherwise False.\n/// &lt;/returns&gt;\n/// &lt;remarks&gt;\n/// For use with local systems\n/// &lt;/remarks&gt;\npublic override bool Authenticate(string username, string password)
123	Print out the keys and Data of a Hashtable in C# .NET 1.1	foreach(string key in hashTable.Keys)\n{\n   Console.WriteLine(String.Format("{0}: {1}", key, hashTable[key]));\n}
124	C# Linq Grouping	var totals =\nfrom s in sites\ngroup s by s.SiteID into grouped\nselect new\n{\n    SiteID = grouped.Key,\n    Last30Sum = grouped.Sum( s =&gt; s.Last30 )\n};
125	Does C# have a way of giving me an immutable Dictionary?	public class ReadOnlyDictionary&lt;TKey, TValue&gt; : IDictionary&lt;TKey, TValue&gt;\n{\n    IDictionary&lt;TKey, TValue&gt; _dict;\n\n    public ReadOnlyDictionary(IDictionary&lt;TKey, TValue&gt; backingDict)\n    {\n        _dict = backingDict;\n    }\n\n    public void Add(TKey key, TValue value)\n    {\n        throw new InvalidOperationException();\n    }\n\n    public bool ContainsKey(TKey key)\n    {\n        return _dict.ContainsKey(key);\n    }\n\n    public ICollection&lt;TKey&gt; Keys\n    {\n        get { return _dict.Keys; }\n    }\n\n    public bool Remove(TKey key)\n    {\n        throw new InvalidOperationException();\n    }\n\n    public bool TryGetValue(TKey key, out TValue value)\n    {\n        return _dict.TryGetValue(key, out value);\n    }\n\n    public ICollection&lt;TValue&gt; Values\n    {\n        get { return _dict.Values; }\n    }\n\n    public TValue this[TKey key]\n    {\n        get { return _dict[key]; }\n        set { throw new InvalidOperationException(); }\n    }\n\n    public void Add(KeyValuePair&lt;TKey, TValue&gt; item)\n    {\n        throw new InvalidOperationException();\n    }\n\n    public void Clear()\n    {\n        throw new InvalidOperationException();\n    }\n\n    public bool Contains(KeyValuePair&lt;TKey, TValue&gt; item)\n    {\n        return _dict.Contains(item);\n    }\n\n    public void CopyTo(KeyValuePair&lt;TKey, TValue&gt;[] array, int arrayIndex)\n    {\n        _dict.CopyTo(array, arrayIndex);\n    }\n\n    public int Count\n    {\n        get { return _dict.Count; }\n    }\n\n    public bool IsReadOnly\n    {\n        get { return true; }\n    }\n\n    public bool Remove(KeyValuePair&lt;TKey, TValue&gt; item)\n    {\n        throw new InvalidOperationException();\n    }\n\n    public IEnumerator&lt;KeyValuePair&lt;TKey, TValue&gt;&gt; GetEnumerator()\n    {\n        return _dict.GetEnumerator();\n    }\n\n    System.Collections.IEnumerator \n           System.Collections.IEnumerable.GetEnumerator()\n    {\n        return ((System.Collections.IEnumerable)_dict).GetEnumerator();\n    }\n}
127	Launch a file with command line arguments without knowing location of exe?	Process.Start
128	How to pass a single object[] to a params object[]	Foo((object)new object[]{ (object)"1", (object)"2" }));
131	Displaying XML data in a Winforms control	&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;\n    &lt;xsl:output method="text"/&gt;\n    &lt;xsl:template match="//error/serverVariables"&gt;\n      &lt;xsl:text&gt;Server variables:\n      &lt;/xsl:text&gt;\n      &lt;xsl:for-each select="item"&gt;\n        &lt;xsl:value-of select="@name"/&gt;:&lt;xsl:value-of select="value/@string"/&gt;\n        &lt;xsl:text&gt;\n        &lt;/xsl:text&gt;\n      &lt;/xsl:for-each&gt;\n    &lt;/xsl:template&gt;\n    &lt;xsl:template match="//error/queryString"&gt;\n      &lt;xsl:text&gt;Query string items:\n      &lt;/xsl:text&gt;\n      &lt;xsl:for-each select="item"&gt;\n        &lt;xsl:value-of select="@name"/&gt;:&lt;xsl:value-of select="value/@string"/&gt;\n        &lt;xsl:text&gt;\n        &lt;/xsl:text&gt;\n      &lt;/xsl:for-each&gt;\n    &lt;/xsl:template&gt;\n&lt;/xsl:stylesheet&gt;
132	Concurrent collections in C#	List&lt;string&gt; theList = (List&lt;String&gt; )callingForm.Invoke(callingForm.delegateGetKillStrings);\n    lock(theList.SyncRoot) {\n        foreach(string s in theList) {\n               // Do some Jazz\n        }\n    }
133	How to find out if a file exists in C# / .NET?	File.Exists(path)
134	Can I stop .NET eating IDs?	&lt;asp:button id="ImAButton" runat="server"&gt;Click Me&lt;/asp:button&gt;\n\n&lt;script type="text/javascript"&gt;\nvar buttonId = "&lt;%=ImAButton.ClientId%&gt;";\n$("#"+buttonId).bind('click', function() { alert('hi); });\n&lt;/script&gt;
135	What is the best way to lock cache in asp.net?	private static object ThisLock = new object();\n\npublic string GetFoo()\n{\n\n  // try to pull from cache here\n\n  lock (ThisLock)\n  {\n    // cache was empty before we got the lock, check again inside the lock\n\n    // cache is still empty, so retreive the value here\n\n    // store the value in the cache here\n  }\n\n  // return the cached value here\n\n}
136	How can I expose only a fragment of IList<>?	IEnumerable&lt;T&gt; FilterCollection&lt;T&gt;( ReadOnlyCollection&lt;T&gt; input ) {\n    foreach ( T item in input )\n        if (  /* criterion is met */ )\n            yield return item;\n}
137	Best way to update LINQ to SQL classes after database schema change	C:\Program Files\Microsoft SDKs\Windows\v6.0A\Bin\x64\sqlmetal.exe \n  /server:&lt;SERVER&gt; \n  /database:&lt;database&gt; \n  /code:"path\Solution\DataContextProject\dbContext.cs" \n  /language:csharp \n  /namespace:&lt;your namespace&gt;
139	Is overloading the only way to have default function arguments in C#?	$
141	How to get an array of distinct property values from in memory lists?	var bars = Foos.Select(f =&gt; f.Bar).Distinct().ToArray();
142	Asp.Net MVC: How to determine if you're currently on a specific view	public static bool IsCurrentAction(this HtmlHelper helper, string actionName, string controllerName)\n    {\n        string currentControllerName = (string)helper.ViewContext.RouteData.Values["controller"];\n        string currentActionName = (string)helper.ViewContext.RouteData.Values["action"];\n\n        if (currentControllerName.Equals(controllerName, StringComparison.CurrentCultureIgnoreCase) &amp;&amp; currentActionName.Equals(actionName, StringComparison.CurrentCultureIgnoreCase))\n            return true;\n\n        return false;\n    }
143	How do I get the full url of the page I am on in C#	Request.Url.ToString()
144	How do you give a C# Auto-Property a default value?	public int X { get; set; } = x; // C# 6 or higher
146	How to Convert a StreamReader into an XMLReader object in .Net 2.0/C#	BufferedStream stream = new BufferedStream(new MemoryStream());\n    stream.Write(Encoding.ASCII.GetBytes("&lt;xml&gt;foo&lt;/xml&gt;"), 0, "&lt;xml&gt;foo&lt;/xml&gt;".Length);\n    stream.Seek(0, SeekOrigin.Begin);\n    StreamReader sr = new StreamReader(stream);\n    XmlReader reader = XmlReader.Create(sr);\n    while (reader.Read())\n    {\n         Console.WriteLine(reader.Value);\n    }\n    stream.Close();
147	Fastest way to find common items across multiple lists in C#	var x = from list in optionLists\n        from option in list\n        where optionLists.All(l =&gt; l.Any(o =&gt; o.Value == option.Value))\n        orderby option.Value\n        select option;
148	Checking if a list is empty with LINQ	public static Boolean IsEmpty&lt;T&gt;(this IEnumerable&lt;T&gt; source)\n{\n    if (source == null)\n        return true; // or throw an exception\n    return !source.Any();\n}
149	Parsing a log file with regular expressions	(?&lt;date&gt;\d{2}/\d{2}/\d{2})\s(?&lt;time&gt;\d{2}:\d{2}:\d{2},\d{3})\s(?&lt;message&gt;(.(?!^\d{2}/\d{2}/\n\d{2}))+)
150	Bmp to jpg/png in C#	var qualityEncoder = Encoder.Quality;\nvar quality = (long)&lt;desired quality&gt;;\nvar ratio = new EncoderParameter(qualityEncoder, quality );\nvar codecParams = new EncoderParameters(1);\ncodecParams.Param[0] = ratio;\nvar jpegCodecInfo = &lt;one of the codec infos from ImageCodecInfo.GetImageEncoders() with mime type = "image/jpeg"&gt;;\nbmp.Save(fileName, jpegCodecInfo, codecParams); // Save to JPG
151	Double dispatch in C#?	using System.Linq;  \n\nclass DoubleDispatch\n{ \n    public T Foo&lt;T&gt;(object arg)\n    { \n        var method = from m in GetType().GetMethods()\n                   where    m.Name == "Foo" \n                         &amp;&amp; m.GetParameters().Length==1\n                         &amp;&amp; arg.GetType().IsAssignableFrom\n                                           (m.GetParameters()[0].GetType())\n                         &amp;&amp; m.ReturnType == typeof(T)\n                   select m;\n\n        return (T) method.Single().Invoke(this,new object[]{arg});          \n    }\n\n    public int Foo(int arg) { /* ... */ }\n\n    static void Test() \n    { \n        object x = 5;\n        Foo&lt;int&gt;(x); //should call Foo(int) via Foo&lt;T&gt;(object).\n    }\n}
152	Google Suggestish text box (autocomplete)	namespace AutoComplete\n{\n    public partial class Main : Form\n    {\n        //so you don't have to address "txtMain.AutoCompleteCustomSource" every time\n        AutoCompleteStringCollection acsc;\n        public Main()\n        {\n            InitializeComponent();\n\n            //Set to use a Custom source\n            txtMain.AutoCompleteSource = AutoCompleteSource.CustomSource;\n            //Set to show drop down *and* append current suggestion to end\n            txtMain.AutoCompleteMode = AutoCompleteMode.SuggestAppend;\n            //Init string collection.\n            acsc = new AutoCompleteStringCollection();\n            //Set txtMain's AutoComplete Source to acsc\n            txtMain.AutoCompleteCustomSource = acsc;\n        }\n\n        private void txtMain_KeyDown(object sender, KeyEventArgs e)\n        {\n            if (e.KeyCode == Keys.Enter)\n            {\n                //Only keep 10 AutoComplete strings\n                if (acsc.Count &lt; 10)\n                {\n                    //Add to collection\n                    acsc.Add(txtMain.Text);\n                }\n                else\n                {\n                    //remove oldest\n                    acsc.RemoveAt(0); \n                    //Add to collection\n                    acsc.Add(txtMain.Text);\n                }\n            }\n        }\n\n        private void Main_FormClosed(object sender, FormClosedEventArgs e)\n        {\n            //open stream to AutoComplete save file\n            StreamWriter sw = new StreamWriter("AutoComplete.acs");\n\n            //Write AutoCompleteStringCollection to stream\n            foreach (string s in acsc)\n                sw.WriteLine(s);\n\n            //Flush to file\n            sw.Flush();\n\n            //Clean up\n            sw.Close();\n            sw.Dispose();\n        }\n\n        private void Main_Load(object sender, EventArgs e)\n        {\n            //open stream to AutoComplete save file\n            StreamReader sr = new StreamReader("AutoComplete.acs");\n\n            //initial read\n            string line = sr.ReadLine();\n            //loop until end\n            while (line != null)\n            {\n                //add to AutoCompleteStringCollection\n                acsc.Add(line);\n                //read again\n                line = sr.ReadLine();\n            }\n\n            //Clean up\n            sr.Close();\n            sr.Dispose();\n        }\n    }\n}
153	Regex to match against something that is not a specific substring	foo.*(?&lt;!bar)
154	C# numeric constants	int rule = 0;\nrule |= 0x80;
155	Can I put an ASP.Net session ID in a hidden form field?	using System;\nusing System.Web;\n\npublic class Global_asax : System.Web.HttpApplication\n{\n    private void Application_BeginRequest(object sender, EventArgs e)\n    {\n        /* \n        Fix for the Flash Player Cookie bug in Non-IE browsers.\n        Since Flash Player always sends the IE cookies even in FireFox\n        we have to bypass the cookies by sending the values as part of the POST or GET\n        and overwrite the cookies with the passed in values.\n\n        The theory is that at this point (BeginRequest) the cookies have not been ready by\n        the Session and Authentication logic and if we update the cookies here we'll get our\n        Session and Authentication restored correctly\n        */\n\n        HttpRequest request = HttpContext.Current.Request;\n\n        try\n        {\n            string sessionParamName = "ASPSESSID";\n            string sessionCookieName = "ASP.NET_SESSIONID";\n\n            string sessionValue = request.Form[sessionParamName] ?? request.QueryString[sessionParamName];\n            if (sessionValue != null)\n            {\n                UpdateCookie(sessionCookieName, sessionValue);\n            }\n        }\n        catch (Exception ex)\n        {\n            // TODO: Add logging here.\n        }\n\n        try\n        {\n            string authParamName = "AUTHID";\n            string authCookieName = FormsAuthentication.FormsCookieName;\n\n            string authValue = request.Form[authParamName] ?? request.QueryString[authParamName];\n            if (authValue != null)\n            {\n                UpdateCookie(authCookieName, authValue);\n            }\n        }\n        catch (Exception ex)\n        {\n            // TODO: Add logging here.\n        }\n    }\n\n    private void UpdateCookie(string cookieName, string cookieValue)\n    {\n        HttpCookie cookie = HttpContext.Current.Request.Cookies.Get(cookieName);\n        if (cookie == null)\n        {\n            HttpCookie newCookie = new HttpCookie(cookieName, cookieValue);\n            Response.Cookies.Add(newCookie);\n        }\n        else\n        {\n            cookie.Value = cookieValue;\n            HttpContext.Current.Request.Cookies.Set(cookie);\n        }\n    }\n}
156	Is there a built-in method to compare collections in C#?	Enumerable.SequenceEqual
157	Can I prevent an inherited virtual method from being overridden in subclasses?	public sealed override void Render()\n{\n    // Prepare the object for rendering        \n    SpecialRender();\n    // Do some cleanup    \n}
159	How do you generate a random number in C#?	NextDouble
160	Ajax Autocomplete Webservice Call - Service Method, am I calling this correctly?	[WebMethod]\npublic string[] GetSearchList(string prefixText, int count)\n{\n}\n\n[WebMethod]\npublic string[] GetSearchList2&lt;T&gt;(string prefixText, int count)\n{\n}
162	How can I programmatically determine if my workstation is locked?	Microsoft.Win32.SystemEvents.SessionSwitch += new Microsoft.Win32.SessionSwitchEventHandler(SystemEvents_SessionSwitch);\n\nvoid SystemEvents_SessionSwitch(object sender, Microsoft.Win32.SessionSwitchEventArgs e)\n{\n    if (e.Reason == SessionSwitchReason.SessionLock)\n    { \n        //I left my desk\n    }\n    else if (e.Reason == SessionSwitchReason.SessionUnlock)\n    { \n        //I returned to my desk\n    }\n}
163	How to do streaming read of a large XML file in C# 3.5	void ParseURL(string strUrl)\n{\n  try\n  {\n    using (var reader = XmlReader.Create(strUrl))\n    {\n      while (reader.Read())\n      {\n        switch (reader.NodeType)\n        {\n          case XmlNodeType.Element:\n            var attributes = new Hashtable();\n            var strURI = reader.NamespaceURI;\n            var strName = reader.Name;\n            if (reader.HasAttributes)\n            {\n              for (int i = 0; i &lt; reader.AttributeCount; i++)\n              {\n                reader.MoveToAttribute(i);\n                attributes.Add(reader.Name,reader.Value);\n              }\n            }\n            StartElement(strURI,strName,strName,attributes);\n            break;\n            //\n            //you can handle other cases here\n            //\n            //case XmlNodeType.EndElement:\n            // Todo\n            //case XmlNodeType.Text:\n            // Todo\n            default:\n            break;\n          }\n        }\n      }\n      catch (XmlException e)\n      {\n        Console.WriteLine("error occured: " + e.Message);\n      }\n    }\n  }\n}
164	Is there a way to perform a "Refresh Dependencies" in a setup project outside VS2008?	Option Strict Off\nOption Explicit Off\nImports System\nImports EnvDTE\nImports EnvDTE80\nImports EnvDTE90\nImports System.Diagnostics\n\nPublic Module RefreshDependencies\n    Sub TemporaryMacro()\n        DTE.ActiveWindow.Object.GetItem("Project\Setup1\Setup1").Select(vsUISelectionType.vsUISelectionTypeSelect)\n        DTE.ExecuteCommand("Build.RefreshDependencies")\n    End Sub\nEnd Module
165	Why doesn't C# support implied generic types on class constructors?	class Foo&lt;T&gt; {\n    public Foo(T x) { ... }\n}\n\n// Notice: non-generic class overload. Possible in C#!\nclass Foo {\n    public static Foo&lt;T&gt; ctor&lt;T&gt;(T x) { return new Foo&lt;T&gt;(x); }\n}\n\nvar x = Foo.ctor(42);
166	C# Dynamic Event Subscription	using System;\n using System.Linq;\n using System.Linq.Expressions;\n using System.Reflection;\n\n class ExampleEventArgs : EventArgs\n {\n    public int IntArg {get; set;}\n }\n\n class EventRaiser\n { \n     public event EventHandler SomethingHappened;\n     public event EventHandler&lt;ExampleEventArgs&gt; SomethingHappenedWithArg;\n\n     public void RaiseEvents()\n     {\n         if (SomethingHappened!=null) SomethingHappened(this, EventArgs.Empty);\n\n         if (SomethingHappenedWithArg!=null) \n         {\n            SomethingHappenedWithArg(this, new ExampleEventArgs{IntArg = 5});\n         }\n     }\n }\n\n class Handler\n { \n     public void HandleEvent() { Console.WriteLine("Handler.HandleEvent() called.");}\n     public void HandleEventWithArg(int arg) { Console.WriteLine("Arg: {0}",arg);    }\n }\n\n static class EventProxy\n { \n     //void delegates with no parameters\n     static public Delegate Create(EventInfo evt, Action d)\n     { \n         var handlerType = evt.EventHandlerType;\n         var eventParams = handlerType.GetMethod("Invoke").GetParameters();\n\n         //lambda: (object x0, EventArgs x1) =&gt; d()\n         var parameters = eventParams.Select(p=&gt;Expression.Parameter(p.ParameterType,"x"));\n         var body = Expression.Call(Expression.Constant(d),d.GetType().GetMethod("Invoke"));\n         var lambda = Expression.Lambda(body,parameters.ToArray());\n         return Delegate.CreateDelegate(handlerType, lambda.Compile(), "Invoke", false);\n     }\n\n     //void delegate with one parameter\n     static public Delegate Create&lt;T&gt;(EventInfo evt, Action&lt;T&gt; d)\n     {\n         var handlerType = evt.EventHandlerType;\n         var eventParams = handlerType.GetMethod("Invoke").GetParameters();\n\n         //lambda: (object x0, ExampleEventArgs x1) =&gt; d(x1.IntArg)\n         var parameters = eventParams.Select(p=&gt;Expression.Parameter(p.ParameterType,"x")).ToArray();\n         var arg    = getArgExpression(parameters[1], typeof(T));\n         var body   = Expression.Call(Expression.Constant(d),d.GetType().GetMethod("Invoke"), arg);\n         var lambda = Expression.Lambda(body,parameters);\n         return Delegate.CreateDelegate(handlerType, lambda.Compile(), "Invoke", false);\n     }\n\n     //returns an expression that represents an argument to be passed to the delegate\n     static Expression getArgExpression(ParameterExpression eventArgs, Type handlerArgType)\n     {\n        if (eventArgs.Type==typeof(ExampleEventArgs) &amp;&amp; handlerArgType==typeof(int))\n        {\n           //"x1.IntArg"\n           var memberInfo = eventArgs.Type.GetMember("IntArg")[0];\n           return Expression.MakeMemberAccess(eventArgs,memberInfo);\n        }\n\n        throw new NotSupportedException(eventArgs+"-&gt;"+handlerArgType);\n     }\n }\n\n\n static class Test\n {\n     public static void Main()\n     { \n        var raiser  = new EventRaiser();\n        var handler = new Handler();\n\n        //void delegate with no parameters\n        string eventName = "SomethingHappened";\n        var eventinfo = raiser.GetType().GetEvent(eventName);\n        eventinfo.AddEventHandler(raiser,EventProxy.Create(eventinfo,handler.HandleEvent));\n\n        //void delegate with one parameter\n        string eventName2 = "SomethingHappenedWithArg";\n        var eventInfo2 = raiser.GetType().GetEvent(eventName2);\n        eventInfo2.AddEventHandler(raiser,EventProxy.Create&lt;int&gt;(eventInfo2,handler.HandleEventWithArg));\n\n        //or even just:\n        eventinfo.AddEventHandler(raiser,EventProxy.Create(eventinfo,()=&gt;Console.WriteLine("!")));  \n        eventInfo2.AddEventHandler(raiser,EventProxy.Create&lt;int&gt;(eventInfo2,i=&gt;Console.WriteLine(i+"!")));\n\n        raiser.RaiseEvents();\n     }\n }
167	Choosing a folder with .NET 3.5	var dlg1 = new Ionic.Utils.FolderBrowserDialogEx();\n     dlg1.Description = "Select a folder to extract to:";\n     dlg1.ShowNewFolderButton = true;\n     dlg1.ShowEditBox = true;\n     //dlg1.NewStyle = false;\n     dlg1.SelectedPath = txtExtractDirectory.Text;\n     dlg1.ShowFullPathInEditBox = true;\n     dlg1.RootFolder = System.Environment.SpecialFolder.MyComputer;\n\n     // Show the FolderBrowserDialog.\n     DialogResult result = dlg1.ShowDialog();\n     if (result == DialogResult.OK)\n     {\n         txtExtractDirectory.Text = dlg1.SelectedPath;\n     }
168	C# Force Form Focus	using System.Diagnostics;\nusing System.Runtime.InteropServices;\n\n// Sets the window to be foreground\n[DllImport("User32")]\nprivate static extern int SetForegroundWindow(IntPtr hwnd);\n\n// Activate or minimize a window\n[DllImportAttribute("User32.DLL")]\nprivate static extern bool ShowWindow(IntPtr hWnd, int nCmdShow);\nprivate const int SW_SHOW = 5;\nprivate const int SW_MINIMIZE = 6;\nprivate const int SW_RESTORE = 9;\n\nprivate void ActivateApplication(string briefAppName)\n{\n    Process[] procList = Process.GetProcessesByName(briefAppName);\n\n    if (procList.Length &gt; 0)\n    {\n        ShowWindow(procList[0].MainWindowHandle, SW_RESTORE);\n        SetForegroundWindow(procList[0].MainWindowHandle);\n    }\n}
169	How do I group in memory lists?	var foos = new List&lt;Foo&gt; {\n   new Foo{Bar = 1,Lum = 1},\n   new Foo{Bar = 1,Lum = 2},\n   new Foo{Bar = 2,Lum = 3},\n};\n\n// Using language integrated queries:\n\nvar q = from foo in foos\n        group foo by foo.Bar into groupedFoos\n        let lums = from fooGroup in groupedFoos\n                   select fooGroup.Lum\n        select new { Bar = groupedFoos.Key, Lums = lums };\n\n// Using lambdas\n\nvar q = foos.GroupBy(x =&gt; x.Bar).\n            Select(y =&gt; new {Bar = y.Key, Lums = y.Select(z =&gt; z.Lum)});\n\n\nforeach (var group in q)\n{\n    Console.WriteLine("Lums for Bar#" + group.Bar);\n    foreach (var lum in group.Lums)\n    {\n        Console.WriteLine(lum);\n    }\n}
170	How do I create an XmlNode from a call to XmlSerializer.Serialize?	XmlSerializer xs = new XmlSerializer(typeof(MyConfig));\nStringWriter xout = new StringWriter();\nxs.Serialize(xout, myConfig);\nXmlDocument x = new XmlDocument();\nx.LoadXml("&lt;myConfig&gt;" + xout.ToString() + "&lt;/myConfig&gt;");
171	How do I specify multiple constraints on a generic type in C#?	public class Animal&lt;SpeciesType,OrderType&gt;\n    where SpeciesType : Species\n    where OrderType : Order\n{\n}
172	Is this the proper use of a mutex?	bool createdNew;\nusing (Mutex mtx = new Mutex(false, "MyAwesomeMutex", out createdNew))\n{\n    try\n    {\n        mtx.WaitOne();\n\n        MessageBox.Show("Click OK to release the mutex.");\n    }\n    finally\n    {\n        mtx.ReleaseMutex();\n    }\n}
176	Can't Re-bind a socket to an existing IP/Port Combination	socket.SetSocketOption(SocketOptionLevel.Socket,SocketOptionName.ReuseAddress, true);
177	Pros & cons between LINQ and traditional collection based approaches	public string branchName (string branchId) \n{\n    //branchList populated in the constructor\n    branch_summary bs = (from b in branchList where b.id == branchId select b).FirstOrDefault();\n    return branch_summary == null ? null : branch_summary.name;\n}
178	How should anonymous types be used in C#?	var query = from item in database.Items\n            // ...\n            select new { Id = item.Id, Name = item.Name };\n\nreturn query.ToDictionary(item =&gt; item.Id, item =&gt; item.Name);
179	Winforms c# - Set focus to first child control of TabPage	private void frmMainLoad(object sender, EventArgs e)\n{\n    ActiveControl = textBox1;\n}
181	How do I create a MessageBox in C#?	if (MessageBox.Show("Do you want to continue?", "Question", MessageBoxButtons.YesNo) == MessageBoxResult.Yes) {\n     //some interesting behaviour here\n}
183	Animation Extender Problems	function linkPostback() {\n\n    var prm = Sys.WebForms.PageRequestManager.getInstance();\n    prm.add_endRequest(playAnimation)\n}\n\nfunction playAnimation() {\n\n    AnimationExtender.Enabled = true;\n    var onclkBehavior = $find("ctl00_btnOpenList").get_OnClickBehavior().get_animation();\n    onclkBehavior.play();\n    AnimationExtender.Enabled = false;\n}
185	How do you initialize a 2 dimensional array when you do not know the size	List&lt;float[]&gt; _calibrationSet = new List&lt;float[]&gt;();\n\n// ...\n\nwhile (recordsToRead)\n{\n    float[] record = new float[SensorCount];\n    for (int i = 0; i &lt; SensorCount; i++)\n    {\n        record[i] = calibrationArrayView.ReadFloat();\n    }\n    _calibrationSet.Add(record);\n}\n\n// access later: _calibrationSet[record][sensor]
188	Changing the value of an element in a list of structs	MyList[1] = new MyStruct("bob");
189	How to discover USB storage devices and writable CD/DVD drives (C#)	using System.IO;\n\nDriveInfo[] allDrives = DriveInfo.GetDrives();\nforeach (DriveInfo d in allDrives)\n{\n  if (d.IsReady &amp;&amp; d.DriveType == DriveType.Removable)\n  {\n    // This is the drive you want...\n  }\n}
190	Property default values using Properties.Settings.Default	public static T FromXml&lt;T&gt;(string xml)\n{\n    XmlSerializer xmlser = new XmlSerializer(typeof(T));\n    using (System.IO.StringReader sr = new System.IO.StringReader(xml))\n    {\n        return (T)xmlser.Deserialize(sr);\n    }\n}
191	Print stack trace information from C#	var trace = new System.Diagnostics.StackTrace(exception);
194	Literal hashes in c#?	var students = new Dictionary&lt;int, StudentName&gt;()\n{\n    { 111, new StudentName {FirstName="Sachin", LastName="Karnik", ID=211}},\n    { 112, new StudentName {FirstName="Dina", LastName="Salimzianova", ID=317, }},\n    { 113, new StudentName {FirstName="Andy", LastName="Ruth", ID=198, }}\n};
195	IQuery NHibernate - does it HAVE to be a list?	query.UniqueResult&lt;T&gt;()
196	Console.WriteLine and generic List	list.ForEach(i =&gt; Console.Write("{0}\t", i));
197	Get the App.Config of another Exe	System.Configuration.ConfigurationManager.AppSettings["myKey"]
198	Prevent Multi-Line ASP:Textbox from trimming line feeds	public void btnSubmitClick(object sender, EventArgs e)\n{\n    if (this.txtMultiLine.Text.StartsWith("\r\n"))\n    {\n        this.txtMultiLine.Text = "\r\n" + this.txtMultiLine.Text;\n    }\n}
199	Generating Random Passwords	System.Web.Security.Membership.GeneratePassword(int length, int numberOfNonAlphanumericCharacters
